<% layout('layouts/layoutTeacher') %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css"> <!-- Ensure this path is correct -->
    <title>Add New Author</title>
    <style>
        /* Add some basic styles for suggestion dropdown */
        .autocomplete-suggestions {
            border: 1px solid #ccc;
            background: white;
            position: absolute;
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
        }
        .autocomplete-suggestion {
            padding: 10px;
            cursor: pointer;
        }
        .autocomplete-suggestion:hover {
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>
    <div class="add-topic-container"> <!-- Changed to add-topic-container for consistent styling -->
        <h1 class="form-title">Add New Author</h1>

        <% if (error) { %>
            <div class="error"><%= error %></div>
        <% } %>

        <form action="/syllabus/add-author" method="POST" class="add-topic-form" style="position: relative;">
            <div class="form-group">
                <label for="regulation" class="form-label">Regulation Code:</label>
                <input type="text" name="regulation" required id="regulation" class="form-input">
            </div>            
            <div class="form-group">
                <label for="topic" class="form-label">Topic:</label>
                <input type="text" name="topic" required id="topic" class="form-input" autocomplete="off">
                <div id="suggestions" class="autocomplete-suggestions"></div> <!-- Suggestions dropdown -->
            </div>

            <div class="form-group">
                <label for="authorName" class="form-label">Author Name:</label>
                <input type="text" name="authorName" required id="authorName" class="form-input">
            </div>

            <div class="form-group">
                <label for="bookName" class="form-label">Book Name:</label>
                <input type="text" name="bookName" required id="bookName" class="form-input">
            </div>

            <button type="submit" class="btn submit-btn">Add Author</button>
        </form>
    </div>

    <script>
        // Fetch valid topics based on regulation (for autocomplete suggestions)
        const topicInput = document.getElementById('topic');
        const suggestionsContainer = document.getElementById('suggestions');
        const regulationInput = document.getElementById('regulation'); // Get regulation input

        // Fetch suggestions when typing in the topic name field
        topicInput.addEventListener('input', function() {
            const regulation = regulationInput.value; // Get regulation value
            const topicValue = this.value;

            // If the input is empty or regulation code is not provided, clear suggestions
            if (!topicValue || !regulation) {
                suggestionsContainer.innerHTML = '';
                return;
            }

            // Fetch valid topics based on the regulation
            fetch(`/syllabus/topics/${regulation}`)
                .then(response => response.json())
                .then(data => {
                    // Filter suggestions based on user input
                    const suggestions = data.topics.filter(topic => 
                        topic.toLowerCase().includes(topicValue.toLowerCase())
                    );

                    // Clear previous suggestions
                    suggestionsContainer.innerHTML = '';

                    // Display suggestions
                    suggestions.forEach(suggestion => {
                        const suggestionElement = document.createElement('div');
                        suggestionElement.classList.add('autocomplete-suggestion');
                        suggestionElement.textContent = suggestion;
                        suggestionElement.onclick = () => {
                            topicInput.value = suggestion; // Set the input value to the suggestion
                            suggestionsContainer.innerHTML = ''; // Clear suggestions
                        };
                        suggestionsContainer.appendChild(suggestionElement);
                    });

                    // If no suggestions, show a message
                    if (suggestions.length === 0) {
                        const noResultsElement = document.createElement('div');
                        noResultsElement.classList.add('autocomplete-suggestion');
                        noResultsElement.textContent = 'No suggestions available';
                        suggestionsContainer.appendChild(noResultsElement);
                    }
                })
                .catch(error => console.error('Error fetching topics:', error));
        });
    </script>
</body>
</html>
